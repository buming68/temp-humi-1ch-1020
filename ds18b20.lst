C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\OUTPUT\ds18b20.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE HARDWARE\ds18b20.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\SYSTE
                    -M;.\HARDWARE) DEBUG OBJECTEXTEND PRINT(.\ds18b20.lst) TABS(2) OBJECT(.\OUTPUT\ds18b20.obj)

line level    source

   1          #include "ds18b20.h" 
   2          #include  "config.h"
   3          
   4          bit ReadTempFlag;
   5          
   6          
   7          /******************************************************************************
   8           * 描  述 : ds18b20初始化   单路
   9           * 入  参 : 无
  10           * 返回值 : 初始化成功:0
  11           *          初始化失败:1
  12           *****************************************************************************/
  13          unsigned char Init_Ds18b20(void)
  14          {
  15   1          unsigned char Status = 0x00;
  16   1          unsigned int CONT_1 = 0;
  17   1          unsigned char Flag_1 = 1;
  18   1      
  19   1          Ds18b20IO_1 = 1;      //DQ复位
  20   1          DelayXus(260);  //稍做延时
  21   1          Ds18b20IO_1 = 0;      //单片机将DQ拉低
  22   1          DelayXus(750);  //精确延时 大于 480us 小于960us
  23   1          Ds18b20IO_1 = 1;      //拉高总线
  24   1          while((Ds18b20IO_1 != 0)&&(Flag_1 == 1))  //等待ds18b20响应，具有防止超时功能
  25   1          {                                         //等待约60ms左右
  26   2              uart1_rece_proc();                    //处理接收到的串口1的数据
  27   2             
  28   2              CONT_1++;
  29   2              DelayXus(400);
  30   2            
  31   2              if(CONT_1 > 200)  Flag_1 = 0;
  32   2              Status = Ds18b20IO_1;
  33   2          }
  34   1          Ds18b20IO_1 = 1;
  35   1          DelayXus(100);
  36   1          
  37   1          return Status;       //返回初始化状态
  38   1      }
  39          
  40          /******************************************************************************
  41           * 描  述 : ds18b20_8初始化  (8个温度传感器 同时初始化)
  42           * 入  参 : 无
  43           * 返回值 : 初始化成功:0
  44           *          初始化失败:1
  45           *****************************************************************************/
  46          unsigned char Init_Ds18b20_8(void)
  47          {
  48   1          unsigned char Status = 0x00;
  49   1          unsigned int CONT_1 = 0;
  50   1          unsigned char Flag_1 = 1;
  51   1      
  52   1          P1 = 0xFF;          //DQ复位
  53   1          DelayXus(260);      //稍做延时
  54   1          P1 = 0;             //单片机将DQ拉低
C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 2   

  55   1          DelayXus(750);      //精确延时 大于 480us 小于960us
  56   1          P1 = 0xFF;          //拉高总线
  57   1          while((Ds18b20IO_1 != 0)&&(Flag_1 == 1))  //等待ds18b20响应，具有防止超时功能
  58   1          {                                         //等待约60ms左右
  59   2              uart1_rece_proc();                    //处理接收到的串口1的数据
  60   2             
  61   2              CONT_1++;
  62   2              DelayXus(400);
  63   2              //DelayXus(300);
  64   2            
  65   2              if(CONT_1 > 200)  Flag_1 = 0;
  66   2              Status = Ds18b20IO_1;
  67   2          }
  68   1          Ds18b20IO_1 = 1;
  69   1          DelayXus(100);
  70   1          //DelayXus(100);
  71   1          P1 = 0xFF;
  72   1          
  73   1          return Status;       //返回初始化状态
  74   1      }
  75          
  76          /******************************************************************************
  77           * 描  述 : Ds18b20写操作：写入1个字节      单路
  78           * 入  参 : 无
  79           * 返回值 : 无
  80           *****************************************************************************/
  81          void Ds18b20Write(unsigned char dat)
  82          {
  83   1          unsigned int i;
  84   1          
  85   1          for(i=0;i<8;i++)
  86   1          {
  87   2              if((dat & 0x01))
  88   2              {
  89   3                  Ds18b20IO_1 = 0;
  90   3                  DelayXus(1);
  91   3                  Ds18b20IO_1 = 1;
  92   3                  DelayXus(60);
  93   3              }
  94   2              else
  95   2              {
  96   3                  Ds18b20IO_1 = 0;
  97   3                  DelayXus(60);
  98   3                  Ds18b20IO_1 = 1;
  99   3                  DelayXus(1);
 100   3              }
 101   2              dat >>= 1;
 102   2          }
 103   1      }
 104          
 105          /******************************************************************************
 106           * 描  述 : Ds18b20写操作：写入1个字节  8个传感器同时写
 107           * 入  参 : 无
 108           * 返回值 : 无
 109           *****************************************************************************/
 110          void Ds18b20Write_8(unsigned char dat)
 111          {
 112   1          unsigned int i;
 113   1        
 114   1      EA = 0;               //总中断送亲  
 115   1        
 116   1          for(i=0;i<8;i++)
C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 3   

 117   1          {
 118   2              if((dat & 0x01))
 119   2              {
 120   3                  P1 = 0;
 121   3                  DelayXus(1);
 122   3                  P1 = 0xFF;
 123   3                  DelayXus(60);
 124   3              }
 125   2              else
 126   2              {
 127   3                  P1 = 0;
 128   3                  DelayXus(60);
 129   3                  P1 = 0xFF;
 130   3                  DelayXus(1);
 131   3              }
 132   2              dat >>= 1;
 133   2          }
 134   1          
 135   1      EA = 1;               //总中断打开  
 136   1          
 137   1      }
 138          
 139          
 140          
 141          /******************************************************************************
 142           * 描  述 : Ds18b20读操作：读出1个字节      单路
 143           * 入  参 : 无
 144           * 返回值 : 读取的1字节数据
 145           *****************************************************************************/
 146          unsigned char Ds18b20Read(void)
 147          {
 148   1          unsigned char Value = 0x00;
 149   1          unsigned int i;
 150   1      
 151   1          Ds18b20IO_1 = 1;
 152   1          DelayXus(10);
 153   1          for(i=0;i<8;i++)
 154   1          {
 155   2              Value >>= 1; 
 156   2              Ds18b20IO_1 = 0;// 给脉冲信号
 157   2              DelayXus(1);
 158   2              Ds18b20IO_1 = 1;// 给脉冲信号
 159   2              DelayXus(1);
 160   2              if(Ds18b20IO_1 == 1) Value |= 0x80;
 161   2              DelayXus(60);
 162   2          } 
 163   1          return Value;
 164   1      }
 165          
 166          
 167          /******************************************************************************
 168           * 描  述 : Ds18b20读操作：读出1个字节  8个传感器同时读
 169           * 入  参 : 无
 170           * 返回值 : 读取的1字节数据
 171           *****************************************************************************/
 172          //void Ds18b20Read_8(unsigned char *Valueptr)
 173          //{
 174          //    unsigned int i, j;
 175          
 176          //    P1 = 0xFF;
 177          //    DelayXus(10);
 178          //    for(i=0;i<8;i++)
C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 4   

 179          //    {
 180          //      for(j=0; j<8; j++)  Valueptr[j] >>= 1; 
 181          //      P1 = 0;       // 给脉冲信号
 182          //      DelayXus(1);
 183          //      P1 = 0xFF;    // 给脉冲信号
 184          //      DelayXus(1);
 185          //      if(Ds18b20IO_1 == 1) Valueptr[0] |= 0x80;
 186          //      if(Ds18b20IO_2 == 1) Valueptr[1] |= 0x80;
 187          //      if(Ds18b20IO_3 == 1) Valueptr[2] |= 0x80;
 188          //      if(Ds18b20IO_4 == 1) Valueptr[3] |= 0x80;
 189          //      if(Ds18b20IO_5 == 1) Valueptr[4] |= 0x80;
 190          //      if(Ds18b20IO_6 == 1) Valueptr[5] |= 0x80;
 191          //      if(Ds18b20IO_7 == 1) Valueptr[6] |= 0x80;
 192          //      if(Ds18b20IO_8 == 1) Valueptr[7] |= 0x80;
 193          //      
 194          //      DelayXus(60);
 195          //    } 
 196          //}
 197          void Ds18b20Read_8(unsigned char *Valueptr)
 198          {
 199   1          unsigned int i, j;
 200   1      
 201   1          P1 = 0xFF;
 202   1          DelayXus(10);
 203   1          for(i=0;i<8;i++)
 204   1          {
 205   2            for(j=0; j<4; j++)  Valueptr[j] >>= 1; 
 206   2            P1 = 0xF0;        // 给脉冲信号
 207   2            DelayXus(1);
 208   2            P1 = 0xFF;    // 给脉冲信号
 209   2            DelayXus(1);
 210   2            if(Ds18b20IO_1 == 1) Valueptr[0] |= 0x80;
 211   2            if(Ds18b20IO_2 == 1) Valueptr[1] |= 0x80;
 212   2            if(Ds18b20IO_3 == 1) Valueptr[2] |= 0x80;
 213   2            if(Ds18b20IO_4 == 1) Valueptr[3] |= 0x80;
 214   2      //      if(Ds18b20IO_5 == 1) Valueptr[4] |= 0x80;
 215   2      //      if(Ds18b20IO_6 == 1) Valueptr[5] |= 0x80;
 216   2      //      if(Ds18b20IO_7 == 1) Valueptr[6] |= 0x80;
 217   2      //      if(Ds18b20IO_8 == 1) Valueptr[7] |= 0x80;
 218   2            
 219   2            DelayXus(60);
 220   2          } 
 221   1      
 222   1          for(i=0;i<8;i++)
 223   1          {
 224   2            for(j=4; j<8; j++)  Valueptr[j] >>= 1; 
 225   2            P1 = 0x0F;        // 给脉冲信号
 226   2            DelayXus(1);
 227   2            P1 = 0xFF;    // 给脉冲信号
 228   2            DelayXus(1);
 229   2      //      if(Ds18b20IO_1 == 1) Valueptr[0] |= 0x80;
 230   2      //      if(Ds18b20IO_2 == 1) Valueptr[1] |= 0x80;
 231   2      //      if(Ds18b20IO_3 == 1) Valueptr[2] |= 0x80;
 232   2      //      if(Ds18b20IO_4 == 1) Valueptr[3] |= 0x80;
 233   2            if(Ds18b20IO_5 == 1) Valueptr[4] |= 0x80;
 234   2            if(Ds18b20IO_6 == 1) Valueptr[5] |= 0x80;
 235   2            if(Ds18b20IO_7 == 1) Valueptr[6] |= 0x80;
 236   2            if(Ds18b20IO_8 == 1) Valueptr[7] |= 0x80;
 237   2            
 238   2            DelayXus(60);
 239   2          } 
 240   1      }
C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 5   

 241          
 242          
 243          /******************************************************************************
 244           * 描  述 : 温度读取函数 带1位小数位      单路
 245           * 入  参 : 无
 246           * 返回值 : 温度值
 247           *****************************************************************************/
 248          float floatReadDs18B20(void) 
 249          {
 250   1          uint8 th;
 251   1          uint8 tl;
 252   1          unsigned char V1,V2;   //定义高低8位 缓冲
 253   1          float fValue;
 254   1      
 255   1          unsigned int CONT_2 = 150;
 256   1      
 257   1          Init_Ds18b20();
 258   1          Ds18b20Write(0xcc);    // 跳过读序号列号的操作
 259   1          Ds18b20Write(0x44);    // 启动温度转换
 260   1        
 261   1          while(CONT_2--)         //150*5ms = 750ms 延时
 262   1          {
 263   2                uart1_rece_proc();      //处理接收到的串口1的数据
 264   2                delay_ms(5);
 265   2          } 
 266   1            
 267   1          Init_Ds18b20();
 268   1          Ds18b20Write(0xcc);    //跳过读序号列号的操作 
 269   1          Ds18b20Write(0xbe);    //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
 270   1          
 271   1          V1 = Ds18b20Read();    //温度值低位
 272   1          V2 = Ds18b20Read();    //温度值高位
 273   1      
 274   1          tl = V1 & 0x0F;   //取低字节后四位 
 275   1          th = (V2 << 4) + (V1 >> 4); //取高字节后三位和低字节前四位
 276   1          fValue = th;            //整数部分
 277   1          if (V2 > 0x08)
 278   1          {
 279   2            th = ~th + 1;           //取反加一
 280   2            fValue = -th;           //负数
 281   2          }
 282   1          fValue += tl * 0.0625;    //放大XX倍
 283   1          return  10*fValue;
 284   1        
 285   1      }
 286          
 287          /******************************************************************************
 288           * 描  述 : 温度读取函数 带1位小数位
 289           * 入  参 : 无
 290           * 返回值 : 无，更改 float fTempM[8]
 291           *****************************************************************************/
 292          void floatReadDs18B20_8(float *tempptr) 
 293          {
 294   1          uint8 th;
 295   1          uint8 tl;
 296   1          unsigned char V1M[8]=0,V2M[8]=0;   //定义高低8位 缓冲
 297   1          float fValue;
 298   1          unsigned int CONT_2 = 150;
 299   1          uint8 i;
 300   1      
 301   1          Init_Ds18b20_8();
 302   1          Ds18b20Write_8(0xcc);    // 跳过读序号列号的操作
C51 COMPILER V9.59.0.0   DS18B20                                                           08/04/2022 14:44:02 PAGE 6   

 303   1          Ds18b20Write_8(0x44);    // 启动温度转换
 304   1        
 305   1          while(CONT_2--)         //150*5ms = 750ms 延时
 306   1          {
 307   2                uart1_rece_proc();      //处理接收到的串口1的数据
 308   2                delay_ms(5);
 309   2          } 
 310   1            
 311   1          Init_Ds18b20_8();
 312   1          Ds18b20Write_8(0xcc);    //跳过读序号列号的操作 
 313   1          Ds18b20Write_8(0xbe);    //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
 314   1          
 315   1          Ds18b20Read_8(V1M);    //温度值低位
 316   1          Ds18b20Read_8(V2M);    //温度值高位
 317   1      
 318   1          for(i=0; i<8; i++)
 319   1          {
 320   2            tl = V1M[i] & 0x0F;   //取低字节后四位 
 321   2            th = (V2M[i] << 4) + (V1M[i] >> 4); //取高字节后三位和低字节前四位
 322   2            fValue = th;            //整数部分
 323   2            if (V2M[i] > 0x08)
 324   2            {
 325   3              th = ~th + 1;           //取反加一
 326   3              fValue = -th;           //负数
 327   3            }
 328   2            fValue += tl * 0.0625;    //放大XX倍
 329   2            
 330   2            if((fValue<120)&&(fValue>-50))  *(tempptr++) =  10*fValue;
 331   2          }
 332   1      }
 333          
 334          
 335          //    V1 = 0x91;        //温度值低位 +25.06度 测度数据
 336          //    V2 = 0x01;        //温度值高位
 337          //    V1 = 0x5E;        //温度值低位 -10.125度
 338          //    V2 = 0xFF;        //温度值高位
 339          
 340          /*********************************END FILE*************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1603    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----      62
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
